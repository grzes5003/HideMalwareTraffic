import pandas as pd
import matplotlib.pyplot as plt

d_loss = 'd_loss'
g_loss = 'g_loss'


def plot_learning_curve(path):
    df = pd.read_csv(path)
    plt.plot(df[d_loss], label=d_loss)
    plt.plot(df[g_loss], label=g_loss)
    plt.xlabel('Epoch')
    plt.ylabel('Loss')
    plt.legend()
    plt.title('Loss function in epochs')
    plt.show()


def plot_distribution(path1, path2, compare_column=['Dur']):
    df1 = pd.read_csv(path1)
    df2 = pd.read_csv(path2)

    fig = plt.figure(figsize=(15, 15))

    for idx, item in enumerate(compare_column):
        ax1 = fig.add_subplot(len(compare_column), 1, idx+1)
        df1[item].plot.kde(ax=ax1, label='Anomaly')
        df2[item].plot.kde(ax=ax1, label='Normal')

        ax1.plot()
        ax1.legend()
        ax1.title.set_text(f'Density of {item}')
    plt.show()
    print('k')


if __name__ == '__main__':
    # plot_learning_curve('..\\saved_data\\learning_logs\\wgan_pg_100_01.log')
    plot_distribution('..\\saved_data\\wgan_gp_data_generated_4_desc.csv',
                      '..\\saved_data\\custom_data\\p2_quic_yt_prepared2.csv',
                      ['Dur', 'SrcBytes', 'DstBytes', 'SrcRate', 'DstRate', 'daytime'])
