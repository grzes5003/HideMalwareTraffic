import os

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from util.data_constants import GEN

d_loss = 'd_loss'
g_loss = 'g_loss'


def plot_learning_curve(path):
    df = pd.read_csv(path)
    plt.plot(df[d_loss], label=d_loss)
    plt.plot(df[g_loss], label=g_loss)
    plt.xlabel('Epoch')
    plt.ylabel('Loss')
    plt.legend()
    plt.title('Loss function in epochs')
    plt.show()


def plot_distribution(path1, path2, compare_column=None):
    if compare_column is None:
        compare_column = ['Dur']
    df1 = pd.read_csv(path1)
    df2 = pd.read_csv(path2)

    fig = plt.figure(figsize=(20, 25))

    for idx, item in enumerate(compare_column):
        ax1 = fig.add_subplot(len(compare_column), 1, idx + 1)
        df2[item].plot.kde(bw_method='scott', ax=ax1, label='Normal', color='tab:blue')
        xlim = ax1.get_xlim()
        ax2 = ax1.twinx()
        df1[item].plot.kde(bw_method='scott', ax=ax2, label='Anomaly', color='tab:red')
        ax2.set_xlim(xlim)

        ax1.plot()
        ax2.plot()
        ax1.legend()
        ax2.legend(loc='upper left')
        ax1.title.set_text(f'Density of {item}')
    plt.show()
    print('k')


def plot_corr_heatmap(path):
    df = pd.read_csv(path)
    df = df.reindex(sorted(df.columns), axis=1)

    plt.figure(figsize=(15, 10))
    heatmap = sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True)
    heatmap.set_title('Correlation Heatmap', fontdict={'fontsize': 12}, pad=12)
    plt.show()


def plot_corr_heatmap_difference(path1, path2):
    df1 = pd.read_csv(path1)
    df1 = df1.reindex(sorted(df1.columns), axis=1)

    df2 = pd.read_csv(path2)
    df2 = df2.reindex(sorted(df2.columns), axis=1)

    corr = df1.corr() - df2.corr()

    plt.figure(figsize=(15, 10))
    heatmap = sns.heatmap(corr, vmin=-1, vmax=1, annot=True)
    heatmap.set_title(f'Difference between correlation heatmaps '
                      f'({os.path.splitext(os.path.basename(path1))[0]} -'
                      f' {os.path.splitext(os.path.basename(path2))[0]})',
                      fontdict={'fontsize': 12}, pad=12)
    plt.show()


if __name__ == '__main__':
    DATA_CSV_PATH = '..\\saved_data\\custom_data\\p2_spotify_cont_prepared_v1.csv'
    cols = [
        'StartTime',
        'Dur',
        'sTos',
        'dTos',
        'SrcBytes',
        'DstBytes',
        # 'SrcLoad',
        # 'DstLoad',
        # 'SrcRate',
        # 'DstRate',
        'SrcPkts',
        'DstPkts',
        # 'daytime'
    ]
    DATA_PATH = f'..\\saved_data\\vae_{GEN}_data_generated_0_cols.csv'

    # plot_learning_curve('..\\saved_data\\learning_logs\\wgan_pg_100_01.log')

    # plot_distribution(f'..\\saved_data\\wgan_{GEN}_data_generated_0_desc_cont_prepared.csv',
    #                   '..\\saved_data\\custom_data\\p2_spotify_cont_prepared.csv',
    #                   cols)

    plot_distribution(DATA_PATH,
                      '..\\saved_data\\custom_data2\\p2_spotify_gen3_prepared.csv',
                      cols)

    plot_corr_heatmap(DATA_PATH)
    # plot_corr_heatmap(DATA_CSV_PATH)

    plot_corr_heatmap_difference('..\\saved_data\\custom_data2\\p2_spotify_gen3_prepared.csv',
                                 DATA_PATH)
