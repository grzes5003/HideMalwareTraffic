from util.preprocessors import quantify_data, add_labels
from util.data_constants import GEN, GEN3_CONT
from GAN.modules.modelBasesRWGAN import noise_dim
from unittest import TestCase
import tensorflow as tf
import numpy as np
import keras
import os


class TestRWganGP(TestCase):
    def test_generate_data(self):
        g_model = keras.models.load_model(f'..\\saved_models\\{GEN}\\gen')

        random_latent_vectors = tf.random.normal(shape=(500, noise_dim))
        generated_images = g_model(random_latent_vectors)

        arr = np.array(tf.concat(generated_images, axis=1))
        arr = np.squeeze(arr)

        i = 0
        while os.path.exists(f'..\\saved_data\\wgan_{GEN}_data_generated_{i}.csv'):
            i += 1

        np.savetxt(f'..\\saved_data\\wgan_{GEN}_data_generated_{i}.csv', arr, delimiter=',')

        # add_labels(f'..\\saved_data\\wgan_{GEN}_data_generated_{i}.csv', GEN3_CONT.all_tags_after_cont)
        # quantify_data(f'..\\saved_data\\wgan_{GEN}_data_generated_{i}.csv', gen2=True)

