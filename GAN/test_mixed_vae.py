from util.preprocessors import quantify_data, add_labels
from util.data_constants import GEN, GEN3_MIXED
# from GAN.modules.modelBases import noise_dim
from GAN.mixed_vae import latent_dim
from unittest import TestCase
import tensorflow as tf
import numpy as np
import keras
import os


class TestWganGP(TestCase):
    def test_generate_data(self):
        vae_model = keras.models.load_model(f'..\\saved_models\\{GEN}\\dec')

        # grid_x = np.linspace(-1.0, 1.0, 50)
        # grid_y = np.linspace(-1.0, 1.0, 50)[::-1]
        random_latent_vectors = tf.random.uniform(shape=(500, latent_dim), minval=-1.0, maxval=1.0)
        # random_latent_vectors = [grid_x, grid_y]
        generated_images = vae_model.predict(random_latent_vectors)

        arr = np.array(generated_images)
        arr = np.squeeze(arr)
        arr = np.round(arr, 4)

        i = 0
        while os.path.exists(f'..\\saved_data\\vae_{GEN}_data_generated_{i}.csv'):
            i += 1

        np.savetxt(f'..\\saved_data\\vae_{GEN}_data_generated_{i}.csv', arr, delimiter=',', fmt='%1.10f')

        add_labels(f'..\\saved_data\\vae_{GEN}_data_generated_{i}.csv', GEN3_MIXED.all_tags_after_mixed)
        # quantify_data(f'..\\saved_data\\wgan_{GEN}_data_generated_{i}.csv', gen2=True)