import os
import pickle
import numpy as np
import pandas as pd
from typing import Tuple
from BlackBoxBase import BlackBoxBase
from sklearn.feature_selection import RFE
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.cluster import KMeans


class KMeansWithRF(BlackBoxBase):
    def __init__(self):
        self.model = KMeansWithRF.load_model()

    def rate_flow(self, flow: np.ndarray):
        return self.model.predict(flow)

    @staticmethod
    def load_model():
        PATH = os.path.dirname(__file__)
        with open(os.path.join(PATH, '../saved_models/RF_02/model.pkl'), 'rb') as file:
            model = pickle.load(file)
        return model

    @staticmethod
    def train_model():
        PATH = os.path.dirname(__file__)
        rf = RandomForestRegressor(n_estimators=100, random_state=42)

        # df_normal = pd.read_csv('saved_data/df_normal.csv')
        df_all = pd.read_csv(os.path.join(PATH, '..\\saved_data\\p2_quic_yt_prepared_mixed.csv'))
        # df_all.drop('Unnamed: 0', axis=1, inplace=True)

        x_labels = df_all['class'].values
        df_all = df_all.drop('class', axis=1)

        x_all = df_all.values

        x_train_all, _, x_train_label, _ = train_test_split(
            x_all, x_labels, test_size=0.25, random_state=42)

        rf.fit(x_train_all, x_train_label)

        with open(os.path.join(PATH, '..\\saved_models\\RF_02\\model.pkl'), 'wb') as file:
            pickle.dump(rf, file)

    @staticmethod
    def create_data_mix(path_normal, path_anomaly):
        PATH = os.path.dirname(__file__)
        df_normal = pd.read_csv(os.path.join(PATH, path_normal))
        df_anomaly = pd.read_csv(os.path.join(PATH, path_anomaly))

        df_anomaly['class'] = 1
        df_normal['class'] = 0

        df_mixed = df_normal.append(df_anomaly).sample(frac=1, random_state=42)

        df_mixed = df_mixed.drop('weekday', axis=1)

        df_mixed.to_csv(os.path.join(os.path.dirname(path_anomaly),
                                     f'{os.path.splitext(os.path.basename(path_normal))[0]}_mixed.csv'),
                        index=False)


if __name__ == '__main__':
    KMeansWithRF.create_data_mix('..\\saved_data\\custom_data\\p2_quic_yt_prepared.csv',
                                 '..\\saved_data\\wgan_gp_data_generated_1_desc.csv')
    # KMeansWithRF.train_model()
