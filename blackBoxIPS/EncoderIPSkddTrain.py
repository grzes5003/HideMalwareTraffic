from sklearn import metrics
from blackBoxIPS.BlackBoxBase import BlackBoxBase
from typing import Tuple
import numpy as np
import pandas as pd
import keras


class EncoderIPSkddTrain(BlackBoxBase):
    def __init__(self):
        self._barrier = 0.69
        self._load_model()

        df_normal = pd.read_csv('saved_data/df_normal.csv')
        df_normal.drop('Unnamed: 0', axis=1, inplace=True)

        self._x_normal = df_normal.values
        self._pred = self._model.predict(self._x_normal)

    def rate_flow(self, flow: np.ndarray) -> Tuple[bool, int]:
        (flow, pred) = (np.resize(flow, self._pred.shape), self._pred) \
            if flow.shape[0] > self._pred.shape[0] \
            else (flow, np.resize(self._pred, flow.shape))
        res = np.sqrt(metrics.mean_squared_error(flow, pred))
        return True if res < self._barrier else False, res

    def _load_model(self):
        self._model = keras.models.load_model('saved_models/model01')
        return self._model
