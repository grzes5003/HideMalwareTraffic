import os
from unittest import TestCase
from blackBoxIPS.EncoderIPSkddTrain import EncoderIPSkddTrain
from sklearn.model_selection import train_test_split
import pandas as pd


class TestEncoderIPSkddTrain(TestCase):
    @classmethod
    def setUpClass(cls):
        PATH = os.path.dirname(__file__)

        df_attack = pd.read_csv(os.path.join(PATH, '..\\saved_data\\df_attack.csv'))
        df_normal = pd.read_csv(os.path.join(PATH, '..\\saved_data\\df_normal.csv'))

        df_normal.drop('Unnamed: 0', axis=1, inplace=True)
        df_attack.drop('Unnamed: 0', axis=1, inplace=True)

        cls.x_normal = df_normal.values
        cls.x_attack = df_attack.values

    def test_rate_flow(self):
        x_attack1, x_attack2 = train_test_split(
            self.x_attack, test_size=0.25, random_state=31)
        x_attack3, x_attack4 = train_test_split(
            self.x_attack, test_size=0.60, random_state=16)

        x_normal_train1, _ = train_test_split(
            self.x_normal, test_size=0.25, random_state=32)
        x_normal_train2, _ = train_test_split(
            self.x_normal, test_size=0.30, random_state=76)
        x_normal_train3, _ = train_test_split(
            self.x_normal, test_size=0.20, random_state=13)

        enc_ips = EncoderIPSkddTrain()
        scores = list()
        scores.append(enc_ips.rate_flow(self.x_attack))
        scores.append(enc_ips.rate_flow(x_attack1))
        scores.append(enc_ips.rate_flow(x_attack3))
        scores.append(enc_ips.rate_flow(x_normal_train1))
        scores.append(enc_ips.rate_flow(x_normal_train2))
        scores.append(enc_ips.rate_flow(x_normal_train3))

        self.assertTrue(all(scores))